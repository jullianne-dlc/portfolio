
/* fixed that weird white space that showed up on the right side. 
   also added "overflow-y: scroll;" which makes the scrollbar always there
   helped fix an issue where the center would shift with/wo the bar*/
html {
    width: 100%;
    height: 100%;
    margin: 0px;
    padding: 0px;
    overflow-x: hidden; 
	overflow-y: scroll;
}

body {
  background-color: #ffffff;
  margin: 0;
}

/* removing the nasty default margin around the page */
.main { 
  padding: 0px;  
  margin-top: 0px;
  margin-bottom: 0px;
  margin-right: 5.5%;
  margin-left: 5.5%;
}


h1 {
 font-family: courier;
 font-size: 42px;
 color: #343434;
 letter-spacing: 0.5px;
 margin: 0px;
 padding-bottom: 20px;
 font-weight: 400;
}

h2 {
 font-family: courier;
 font-size: 20px;
 color: #262626;
 letter-spacing: 0.5px;
 margin: 0px;
 font-weight: 400;
 line-height: 1.5;
}

p {
 font-family: courier;
 font-size: 16px;
 color: #696969;
 letter-spacing: 0.5px;
 margin: 0px;
 font-weight: 400;
 line-height: 1.5;
}

/* makes About Me links bold */
.para-right a {
	font-weight: 700;
}






/* ART DETAILS PAGES */

/* IDK WHY BUT THIS CODE BEING AT THE BOTTOM MAKES IT NOT WORK WTF.
   needa tidy it up later but I'm leaving it up here for now. (4/28)
   
   THIS IS THE CODE FOR THE ART DETAIL PAGES, text on left + art on right (images have a "grid a" and "grid b")
   ~
   this makes it be two columns of text and images
   as long as the screen is above 952 pixels wide. */

@media screen and (min-width: 952px) {
	.layout {
	  display: grid;
	  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
	  grid-gap: 3%;
	  margin: 10px 2%;
	}

	.text-column {
	  grid-column: 1 / 2;
	  padding-top: 0px;
	  padding-bottom: 100px;
	}

	.image-column {
	  grid-column: 2 / 5;
	  max-width: 100%;
	  justify-self: center;
	  padding-left: 2%;
	}

	.header-left {
	  padding-bottom: 100px;
	  padding-top: 30px;
	  overflow-wrap: break-word;
	}

	.fixed {
	  position: sticky;
	  top: 50px;
	  width: 100%;
	}

	.awards {
	  padding-bottom: 10%;
	  padding-top: 3%;
	}
}


.awards {
	color: #696969;
	text-align: center;
	padding-left: 40px;
	padding-right: 40px;
}

.awards a {
	text-decoration: none;
	color: #696969;
}

.text-column a {
	text-decoration: none;
	color: #696969;
}


/* (4/30) the following values make grid b fit 3 images per row under tall 1000x1333 3x4-proportioned images 
   and have 2 images for a second at 640 width screens/mobile.
   change as needed! this is just what I tested for vertical 3x4 images. 
   
   (8/8) added grids c and d! these were made specifically for Like Me's detail images. 
	grid c makes the main detail image be two-columned at full screen, then single-comlumn at mobile sizes (640 specifically)
    grid d makes the bottom detail images a three-column at full, then turn into two-columns when shrunken 
	when using just grids c and d tho, make sure to give grid a the filler image lmao. that's me brute forcing. srryyy. */

.grid-a {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1000px));
  grid-gap: 4px;
  padding-bottom: 4px;
}

.grid-b {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  grid-gap: 4px;
  padding-bottom: 4px;
}

.grid-c {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 4px;
  padding-bottom: 4px;
}

.grid-d {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 4px;
  padding-bottom: 4px;
}

.image-column img{
  width: 100%;
  height: auto;
}

.video {
  display: flex;
  flex-wrap: wrap;
  position: relative;
  padding-bottom: 56.25%;
}

.video iframe {
  position: absolute;
  width: 100%;
  max-width: 1000px;
  height: 100%;
}

/* (8/13) the following makes the sketchfab iframe viewer thingy work properly. 
	thanks chatGPT. '*/

.sketchfab-embed-wrapper {
  position: relative;
  width: 100%;
  padding-bottom: 60%; /* Adjust this value to control the aspect ratio */
}

.sketchfab-embed-wrapper iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}




/* switching to single column for text and images
   once the image size starts breaking lol */
@media screen and (max-width: 952px) and (min-width: 642px) {
	.layout {
	  grid-template-columns: 1fr;
	  padding-top: 30px;
    }

	.fixed {
	  display: flex;
	  gap: 30px;
	  padding-bottom: 50px;
	}

	.header-left {
	  width: 30%;
	  overflow-wrap: break-word;
	}

	.para-right {
	  width: 70%;
	}

	.grid-b {
	  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	}


/* (8/8) this makes grid c behave like grid a when the screen width is less than 951px. 
	made specifically for Like Me '*/
	.grid-c {
	  grid-template-columns: repeat(auto-fit, minmax(100px, 1000px));
	}

	.awards {
	  padding-bottom: 12%;
	  padding-top: 8%;
	}

}


/* removing all margins/padding for images and adding margins for text 
   once the screen is mobile size */
@media screen and (max-width: 641px) {
	.text-column {
	  padding-top: 35px;
	  padding-left: 35px;
	  padding-right: 35px;
	  padding-bottom: 60px;
	}

	.awards {
	  padding-bottom: 20%;
	  padding-top: 12%;
	}

	h2 {
	  padding-bottom: 50px;
	}

	.image-column {
	margin: 0px 0px;
	}

	.grid-a {
	  grid-gap: 2px;
	  padding-bottom: 2px;
	}

	.grid-b {
	  grid-gap: 2px;
	  padding-bottom: 2px;
	  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	}

	.grid-c {
	  grid-gap: 2px;
	  padding-bottom: 2px;
	  grid-template-columns: repeat(auto-fit, minmax(100px, 1000px));
	}

	.grid-d {
	  grid-gap: 2px;
	  padding-bottom: 2px;
	  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	}
}

@media screen and (max-width: 720px) and (min-width: 642px) {
	.text-column {
	  padding-left: 35px;
	  padding-right: 35px;
	}

	.awards {
	  padding-bottom: 20%;
	  padding-top: 12%;
	}
}


/* haven't edited the art details in ages lol but I'm just cleaning up a little.
making it so that for super wide screen the text column gets scooted towards the right.*/
@media screen and (min-width: 2300px) {

	.text-column {
		padding-left: 10%;
	}
}



/* FADE IN STUFF AHHHSFUGHSHGFOUSGF */

/* Apply initial transparency to the div elements */
.image.fadein {
  opacity: 0;
}
/* Apply the fade-in transition to the div elements */
.image.fadein.fadein-active {
  opacity: 1;
  transition: opacity 0.5s ease-in-out;
}

/* A general fadein you can just slap onto any div*/
.fadein-2 {
  animation: fadeInAnimation 0.5s ease-in-out forwards;
}





/* Define the fade-in animation keyframes */
@keyframes fadeInAnimation {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}




/* RESPONSIVE GRID LAYOUT! (INDEX)

making the container with all the images (row) flexible (flex and wrap). */
.row {
  display: flex;
  flex-wrap: wrap;
  padding-bottom: 40px;
}
/* create four equal columns (thanks to the 25% value) that sits next to each other. */
.column {
  flex: 25%;
  max-width: 25%;
  padding: 0 0px;
}
/* editing the images themselves inside the columns, makes that scuffed white margin lmao. */
.column img {
  padding: 1.5px;
  vertical-align: middle;
  width: 99%;
}

/* responsive layout - TWO COLUMNS */
@media screen and (max-width: 1200px) {
  .column {
    flex: 50%;
    max-width: 50%;
  }
}

/* the negative value removes the white line along the right and left (caused by the 1.5px padding) edges so it's clean */
@media screen and (max-width: 720px) {
  .main {
    margin-right: -2px;
    margin-left: -2px;

  }

  /* letting the image-hover text font size be smaller on nearing-mobile */
  .image-text {
	font-size: 20px;
  }


}

/* responsive layout - ONE COLUMN
also removes side margins! 
also removes the thin white line padding!

(8/19) REMOVED IT. I think I like the two-column look for mobile.

@media screen and (max-width: 640px) {
  .column {
    flex: 100%;
    max-width: 100%;
  }
  .main {
    margin-right: -2px;
    margin-left: -2px;
  }
  .column img {
    padding: 1.5px;
    vertical-align: middle;
    width: 100%;
  }
}
*/





/* INTERACTING WITH IMAGES! (INDEX)

im so happy, shit is working ;o; vini helped so much with the hover transitions. 
i feel so so thankful and so so accomplished. (7/14/2022)

hovering over the image (specifically within row and column), makes image change). */
.row .column img:hover {
	z-index: 100;
	transform: scale(1.01);
	/*opacity: 50%;*/
	filter: brightness(40%) grayscale(100%);
}

/* hovering over the image shows text!
"when hovering over image, affect text in the following ways."
affects text: makes 1.01 bigger, opacity becomes 1 (text has an ease transition further below).
pointer events makes it so that the mouse doesn't turn into an "I" over the text, when mouse is over the image. */
.row .column .image:hover .image-text {
	transform: scale(1.01);
	opacity: 1;
	pointer-events: none;
}

.image-text {
	color: white;
	font-family: courier;
	font-weight: 500;
	opacity: 0;
	position: absolute;
	top: 44%;
	width: 100%;
	text-align: center;
	transition: 0.3s ease;
}

@media screen and (min-width: 721px) {
	.image-text {
		font-size: 28px;
	}
}

.image {
	position: relative;
}





/* HEADER.NAVBAR THINGS! 

deparately trying to make the logo stay centered lol ahhh.
(4/25) FINALLY DID IT, JESUS CHRIST. 
I had to give the "navbar" class (the one that holds the logo and menu buttons) "text align:center"
and give the .logo... stuff just below the "img" thing, so it directly affects the image. 
brb screaming, this took me hours.
anyway.
width makes sure it fills the parent container "navbar"
max and min width give it its biggest and smallest size. I think the source image is ~900 px wide.
*/

.logo img{
	width: 100%;
	margin: 0.75em 0px;
	max-width: 280px;
	min-width: 150px;
}

.navbar {
	text-align: center;
	padding-bottom: 1.25em;
}









/* MENU BUTTON STUFF!!!! */

/* OKAY. so this makes the buttons space apart evenly.
   "flex" makes it space out plus...
   "space-around" vs. "space-between" will gives different spacing effects.
   also I understand padding now! first # is top/bottom, second is sides! */


   	.buttons {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		font-family: courier;
		letter-spacing: 0.75px;
		font-size: 18px;
		margin: 0px -2.5em;
	}

	.buttons a {
		padding: 10px 20px;
	}

@media screen and (min-width: 1025px) {

/* to make the menu buttons at the top be further/closer change the padding em value below */
	.button {
		flex-basis: calc(100% / 6);
		flex: 1;
		margin: 10px;
		padding: 2px 2em;
		text-align: center;
		min-width: 220px;
	}

	.buttons-dropdown {
		display: none;
	}
}

@media screen and (max-width: 1024px) {
  /* drop-down menu stuff */

  .buttons-grid {
    display: none;
  }

  .menu {
    display: block;
    margin: 0 auto;
    position: relative;
    width: 220px;
    list-style-type: none;
    padding: 0;
	z-index: 999;
  }


  .menu > li > a {
    background: #696969;
    color: white;
    display: block;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
	cursor: pointer; /* Add cursor: pointer to indicate clickable */
  }

  .menu > li > ul.dropdown {
    background: #696969;
    height: 0;
    opacity: 0;
    position: absolute;
    transition: all .2s ease;
    top: 40px;
    width: 100%;
    list-style-type: none;
    padding: 0;
    overflow: hidden;
  }


  .menu > li:hover > ul.dropdown,
  .menu > li > a:focus + ul.dropdown {
    height: auto;
    opacity: 1;
	padding-top: 10px;
  }

  .menu ul a {
    color: white;
	opacity: 1;
    display: block;
    padding: 20px 30px;
	text-decoration: none;
  }

 
  /* (8/14) new stuff chatGPT stuff I'm adding.
	in conjunction with new javascript stuff, this should improve menu button functionality on mobile. 
	it's not working tho ;w; marking it out. might come back to it another time.
	*/
  
    /* Hide the dropdown menu by default
	.menu > li > ul.dropdown {
		display: none;
	}

   Show the dropdown when the menu button is clicked 
	.menu-button-active .menu > li > ul.dropdown {
		display: block;
	}
*/

}









/* STYLING MENU LINK STUFF

makes it fade to a darker color on hover, and turn the underline from white to black. 
"a" refers to all the clickable links at the top.
"button-current" is the non-clickable current link.*/



@media screen and (min-width: 1024px) {
	.buttons a {
		text-decoration: none;
		color: #696969;
	}
	.button-current a {
		color: white;
		background-color: #696969;
	}
	/* hover styling. */
	.buttons a:hover {
		color: white;
		background-color: #696969;
		transition: 0.2s;
	}
	/* styling links!
	makes it fade to a darker color on hover, and turn the underline from white to black. 
	"a" refers to all the clickable links at the top.
	"button-current" is the non-clickable current link.*/
	z:hover {
		color: white;
		transition: 0.2s;
	}
}


/* (4/28) WIP tryna make the dropdown menu buttons do stuff when you highlight them */
@media screen and (max-width: 1024px) {
	.buttons a {
		background-color: #696969;
	}
	.button-current a {
		background-color: #505050;
	}
	/* hover styling. */
	.buttons a:hover {
		background-color: #505050;
	}
	/* styling links!
	makes it fade to a darker color on hover, and turn the underline from white to black. 
	"a" refers to all the clickable links at the top.
	"button-current" is the non-clickable current link.*/
	z:hover {
		color: #505050;
		transition: 0.2s;
	}

}



/* ABOUT ME */ 

/* Container for the entire about me section */
.aboutme-container {
  opacity: 0;
  max-width: 1000px;
  margin: 0 auto;
  padding: 3% 10% 3% 6%;
}

/* Flex layout to arrange image and text side by side */
.aboutme-layout {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
}

/* Style for the image */
.aboutme-image {
  flex-basis: 65%;
  padding-right: 60px; /* Add some spacing between image and text */
}

/* Style for the image itself */
.aboutme-image img {
  max-width: 100%;
  height: auto;
}

/* Style for the text */
.aboutme-text {
  flex-basis: 35%;
  padding-top: 80px;
}

.aboutme-text h1 {
  font-size: 20px;
  padding-bottom: 30px;
}

.aboutme-text a {
  text-decoration: none;
  color: #696969;
}


/* Mobile styles */
@media screen and (max-width: 1024px) {
  .aboutme-container {
    opacity: 0;
    max-width: 1000px;
    margin: 0 auto;
    padding: 3% 10% 6% 10%;
  }

  .aboutme-layout {
    flex-direction: column;
	padding: 0px 5%;
	align-items: center;
  }

  .aboutme-image  {
	text-align: center;
	padding-right: 0px; /* Removes the little gap on the right of the image, makes it perfectly centered */
  }

  .aboutme-image img {
	max-width: 100%; /* Adjust the image size for mobile */
	margin-bottom: 5px; /* Add some spacing between image and text */
  }
}






/* GAMES & 3D */

/* oh god this took so long gg's it looks aight 
grid-row-a is for having any number of images (3 rn) side by side in one row taking up the whole width.
grid-row-b is for having less images (2rn ) then defining padding on the left and right side so they just take up some space in the middle.
grid-row-c is for having even less images (1rn) and defining even more padding.
image sizes are dependent on how much padding there is.
I know, it's bad. but I'm not a pro and it's working for what I need weh.
~
update, ended up putting them all on a-rows. b and c still work so if you wanna use em in the future go ahead.

--IAN 2/2024 */




.game-row-a {
  display: flex;
  flex-basis: calc((100% - 1px) / 4); /* 20px is the combined width of two gaps */
  gap: 0.5%;
  justify-content: center;
  padding-bottom: 0.6%;
}

.game-row-b {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 0.6%;
  justify-content: center;
  padding-left: 10%;
  padding-right: 10%;
  padding-bottom: 0.6%;
}

.game-row-c {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  padding-left: 25%;
  padding-right: 25%;
  padding-bottom: 0.6%;
}

.game-image-container {
  flex: 1;
}

.game-image img {
	width: 100%;
	vertical-align: top;
	object-fit: contain;
	padding: 0px;
}

.games {
	padding-bottom: 50px;
	}

/*hovering over the image (specifically within row and column), makes image change). */
.game-image:hover {
	z-index: 100;
	transform: scale(1.01);
	/*opacity: 50%;*/
	filter: brightness(40%) grayscale(100%);
}

/* hovering over the image shows text!
"when hovering over image, affect text in the following ways."
affects text: makes 1.01 bigger, opacity becomes 1 (text has an ease transition further below).
pointer events makes it so that the mouse doesn't turn into an "I" over the text, when mouse is over the image. */
.game-image-container:hover .game-text {
	transform: scale(1.01);
	opacity: 1;
	pointer-events: none;
}

.game-text {
	color: white;
	font-family: courier;
	font-weight: 500;
	opacity: 0;
	position: absolute;
	top: 44%;
	width: 100%;
	text-align: center;
	transition: 0.3s ease;
	z-index: 100;
	font-size: 28px;
}

.game-image-container {
	position: relative;
}



/* mobile styles!!! */

@media screen and (max-width: 1024px) {

	.game-text {
	  font-size: 32px;
	}

	.game-row-a {
	  flex-wrap: wrap; /* new layout meant having row-a only wrap at a small enough screen. wrapping literally just makes it a single column as opposed to a single row. */
	  padding-left: 0px;
	  padding-right: 0px;
	  padding-bottom: 0px; 
	}

	.game-row-b {
	  padding-left: 0px;
	  padding-right: 0px;
	  padding-bottom: 0px; 
	}

	.game-row-c {
	  padding-left: 0px;
	  padding-right: 0px;
	  padding-bottom: 0px; 
	}

	.game-image-container {
	  flex: 1;
	  min-width: 100%;
	  padding-bottom: 8px; 
	}

}

@media screen and (max-width: 720px) {

	.game-text {
	  font-size: 32px;
	}

	.game-image-container {
	  padding-bottom: 2px; 
	}

}






/* trying another one ahhhh
	ended up not using though :O it flexes yeah but the images dont grow anympore and feel too stiff. 
	gonna just stick with the old one, its not perfect but it looks nice enough.


.models-container {
  padding: 0px;
  margin: 0px;
}

ul {
  list-style: none;
}

/ Responsive image gallery rules begin /

.models-gallery {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: 0px;
  margin: 0px;
  gap: 5px;
}

.models-gallery > li {
/ flex-basis: calc((100% - 20px) / 3); 20px is the combined width of two gaps -- this forces 3 images per row but they don't overflow to the next line ;o;' /
  flex-basis: 675px;
  position: relative;
  cursor: pointer;
}

/  makes the last images hug the left side instead of being centered,
I like it centered tho.
.models-gallery::after {
  content: "";
  flex-basis: 350px;
}
 /

.models-gallery li img {
  object-fit: cover;
  max-width: 100%;
  height: auto;
  vertical-align: middle;
}

.models-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background: rgba(57, 57, 57, 0.502);
  top: 0;
  left: 0;
  transform: scale(0);
  transition: all 0.2s 0.1s ease-in-out;
  color: #fff;
  border-radius: 5px;
  /  center overlay text  /
  display: flex;
  align-items: center;
  justify-content: center;
}

/  hover  /
.models-gallery li:hover .overlay {
  transform: scale(1);
}

*/

/* 
	old HTML for the new layout attempt:
	<div class="models-container">
      <ul class="models-gallery">
        <li>
          <img src="images/3D/a_1.jpg" alt="" />
          <div class="models-overlay"><span>Image title</span></div>
        </li>
        <li>
          <img src="images/3D/a_2.jpg" alt="" />
          <div class="models-overlay"><span>Image title</span></div>
        </li>
        <li>
          <img src="images/3D/a_3.jpg" alt="" />
          <div class="models-overlay"><span>Image title</span></div>
        </li>
        <li>
          <img src="images/3D/a_1.jpg" alt="" />
          <div class="models-overlay"><span>Image title</span></div>
        </li>
      </ul>
    </div>
*/